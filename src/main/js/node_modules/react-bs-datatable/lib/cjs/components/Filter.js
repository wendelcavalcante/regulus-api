"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
const react_1 = __importDefault(require("react"));
const react_bootstrap_1 = require("react-bootstrap");
const hooks_1 = require("../helpers/hooks");
const DatatableWrapper_1 = require("./DatatableWrapper");
const FontAwesome_1 = __importDefault(require("./FontAwesome"));
/**
 * Renders a control for the text filtering. This component is
 * only rendered when at least one of the headers have `isFilterable`
 * prop. Otherwise, this component will return `null`.
 */
function Filter({ placeholder = 'Enter text...', classes, controlledProps }) {
    const { filterState: filterStateContext, onFilterChange: onFilterChangeContext, isFilterable } = (0, DatatableWrapper_1.useDatatableWrapper)();
    (0, hooks_1.useControlledStateSetter)(controlledProps);
    if (!isFilterable) {
        return null;
    }
    /**
     * Controlled has the bigger priority.
     * Supports @deprecated onFilter
     */
    const onFilterChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilterChange) ||
        (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilter) ||
        onFilterChangeContext;
    const filterState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filter) || filterStateContext;
    return (react_1.default.createElement(react_bootstrap_1.InputGroup, { className: classes === null || classes === void 0 ? void 0 : classes.inputGroup },
        react_1.default.createElement(react_bootstrap_1.Form.Control, { type: "text", name: "table-filter", value: filterState, placeholder: placeholder, onChange: (e) => onFilterChange(e.target.value), className: classes === null || classes === void 0 ? void 0 : classes.input }),
        react_1.default.createElement(react_bootstrap_1.Button, { onClick: () => onFilterChange(''), className: classes === null || classes === void 0 ? void 0 : classes.clearButton, "aria-label": "Clear filter" },
            react_1.default.createElement(FontAwesome_1.default, { icon: "times", className: "fa-fw" }))));
}
exports.Filter = Filter;
