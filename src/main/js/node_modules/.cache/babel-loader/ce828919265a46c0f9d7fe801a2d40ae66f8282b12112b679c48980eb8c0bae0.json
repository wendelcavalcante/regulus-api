{"ast":null,"code":"import { createContext, useContext } from 'react';\n/**\n * @internal\n *\n * This is a function to create a typed React context safely.\n * Reference: https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/.\n */\nexport function createCtx() {\n  const ctx = createContext(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (c === undefined) throw new Error('useCtx must be inside a Provider with a value');\n    return c;\n  }\n  return [useCtx, ctx.Provider]; // 'as const' makes TypeScript infer a tuple\n}","map":{"version":3,"names":["createContext","useContext","createCtx","ctx","undefined","useCtx","c","Error","Provider"],"sources":["/home/wendel/desen/regulus/node_modules/react-bs-datatable/lib/esm/helpers/react.js"],"sourcesContent":["import { createContext, useContext } from 'react';\n/**\n * @internal\n *\n * This is a function to create a typed React context safely.\n * Reference: https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context/.\n */\nexport function createCtx() {\n    const ctx = createContext(undefined);\n    function useCtx() {\n        const c = useContext(ctx);\n        if (c === undefined)\n            throw new Error('useCtx must be inside a Provider with a value');\n        return c;\n    }\n    return [useCtx, ctx.Provider]; // 'as const' makes TypeScript infer a tuple\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAGH,aAAa,CAACI,SAAS,CAAC;EACpC,SAASC,MAAMA,CAAA,EAAG;IACd,MAAMC,CAAC,GAAGL,UAAU,CAACE,GAAG,CAAC;IACzB,IAAIG,CAAC,KAAKF,SAAS,EACf,MAAM,IAAIG,KAAK,CAAC,+CAA+C,CAAC;IACpE,OAAOD,CAAC;EACZ;EACA,OAAO,CAACD,MAAM,EAAEF,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}