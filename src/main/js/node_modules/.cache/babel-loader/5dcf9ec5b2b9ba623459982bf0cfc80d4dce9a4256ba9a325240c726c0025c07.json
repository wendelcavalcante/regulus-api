{"ast":null,"code":"import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\nimport { useControlledStateSetter, useCreateCheckboxHandlers } from '../helpers/hooks';\n/**\n * Renders the table body, which is a `tbody` tag along with the rest of the elements,\n * such as `tr` and `td` tags.\n */\nexport function TableBody({\n  labels,\n  classes,\n  rowProps,\n  onRowClick: onRowClickProp,\n  controlledProps,\n  children\n}) {\n  const {\n    data\n  } = useDatatableWrapper();\n  useControlledStateSetter(controlledProps);\n  let bodyContent;\n  if (children) {\n    if (typeof children === 'function') {\n      bodyContent = children(data);\n    } else {\n      bodyContent = children;\n    }\n  } else {\n    const body = [];\n    const dataLength = data.length;\n    if (dataLength > 0) {\n      for (let rowIdx = 0; rowIdx < dataLength; rowIdx++) {\n        // Push to array.\n        body.push(React.createElement(TableRow, {\n          key: rowIdx,\n          rowData: data[rowIdx],\n          rowIdx: rowIdx,\n          rowProps: rowProps,\n          classes: {\n            td: classes === null || classes === void 0 ? void 0 : classes.td,\n            tr: classes === null || classes === void 0 ? void 0 : classes.tr\n          },\n          controlledProps: controlledProps,\n          onRowClick: onRowClickProp\n        }));\n      }\n    } else {\n      body.push(React.createElement(EmptyTablePlaceholder, {\n        key: \"row-zero-length\",\n        noResultsLabel: labels === null || labels === void 0 ? void 0 : labels.noResults\n      }));\n    }\n    bodyContent = body;\n  }\n  return React.createElement(\"tbody\", {\n    className: makeClasses('tbody', classes === null || classes === void 0 ? void 0 : classes.tbody)\n  }, bodyContent);\n}\n// Composing functions.\nconst VALID_TAGS_FOR_ROW_ONCLICK = ['TD', 'TR'];\n/**\n * `TableRow` component, as its name suggests, is a component to render a row of a table.\n * This component is exported so it is possible to compose the rows further. For example:\n *\n * ```\n * <TableBody>\n *   {\n *     data.map((row, rowIdx) => (\n *       row.isLoading ? (\n *         <tr><td colSpan={headers.length}><Loading /></td></tr>\n *       ) : (\n *         <TableRow rowData={row} rowIdx={rowIdx} />\n *       )\n *     ))\n *   }\n * </TableBody>\n * ```\n *\n * The above snippet will render loading indicator for rows that don't have sufficient data to store yet.\n */\nexport function TableRow({\n  rowData,\n  rowIdx,\n  onRowClick: onRowClickProp,\n  classes,\n  controlledProps,\n  rowProps\n}) {\n  const {\n    headers,\n    onCheckboxChange: onCheckboxChangeContext,\n    checkboxState: checkboxStateContext,\n    filteredDataLength: filteredDataLengthContext,\n    data\n  } = useDatatableWrapper();\n  const headersLength = headers.length;\n  function onRowClick(event) {\n    if (typeof onRowClickProp === 'function') {\n      if (event.target instanceof HTMLElement && VALID_TAGS_FOR_ROW_ONCLICK.includes(event.target.tagName)) {\n        onRowClickProp(rowData, event);\n      }\n    }\n  }\n  const onCheckboxChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onCheckboxChange) || onCheckboxChangeContext;\n  const checkboxState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.checkboxState) || checkboxStateContext;\n  const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n  const {\n    createColumnCheckboxClickHandler\n  } = useCreateCheckboxHandlers({\n    checkboxState,\n    data,\n    filteredDataLength,\n    onCheckboxChange\n  });\n  const row = [];\n  for (let colIdx = 0; colIdx < headersLength; colIdx++) {\n    const {\n      cell,\n      cellProps = {},\n      prop: rawProp,\n      checkbox,\n      alignment\n    } = headers[colIdx];\n    const prop = rawProp.toString();\n    let value = '';\n    if (checkbox && checkboxState) {\n      // Render checkbox.\n      const idValue = rowData[checkbox.idProp];\n      const isSelected = checkboxState[prop].selected.has(idValue);\n      // Source for using visually hidden: https://www.w3.org/WAI/tutorials/forms/labels/#hiding-the-label-element.\n      value = React.createElement(Form.Group, {\n        controlId: `table-selection-${rowData[checkbox.idProp]}`\n      }, React.createElement(Form.Label, {\n        className: \"visually-hidden\"\n      }, isSelected ? `Remove ${idValue} from selection` : `Add ${idValue} to selection`), React.createElement(Form.Check, {\n        type: \"checkbox\",\n        name: \"table-selection\",\n        value: rowData[checkbox.idProp],\n        className: checkbox.className,\n        checked: checkboxState[prop].selected.has(idValue),\n        onChange: createColumnCheckboxClickHandler({\n          checkboxProp: prop,\n          idProp: checkbox.idProp,\n          rowIdx\n        })\n      }));\n    } else {\n      // Render normally.\n      if (cell === undefined) {\n        value = rowData[prop];\n      } else {\n        value = cell(rowData);\n      }\n    }\n    row.push(React.createElement(\"td\", {\n      key: `col-${colIdx}`,\n      className: makeClasses('tbody-td', classes === null || classes === void 0 ? void 0 : classes.td,\n      // Alignment.\n      {\n        'text-start': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'left',\n        'text-center': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'center',\n        'text-end': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'right'\n      }, typeof cellProps.className === 'function' ? cellProps.className(rowData) : cellProps.className),\n      style: typeof cellProps.style === 'function' ? cellProps.style(rowData) : cellProps.style\n    }, value));\n  }\n  let passedRowProps = {};\n  if (typeof rowProps === 'function') {\n    passedRowProps = rowProps(rowData);\n  } else if (rowProps !== undefined) {\n    passedRowProps = rowProps;\n  }\n  return React.createElement(\"tr\", Object.assign({}, passedRowProps, {\n    className: makeClasses('tbody-tr', classes === null || classes === void 0 ? void 0 : classes.tr, passedRowProps === null || passedRowProps === void 0 ? void 0 : passedRowProps.className),\n    onClick: onRowClick\n  }), row);\n}\n/**\n * `EmptyTablePlaceholder` is a component used to indicate that a table is empty, or doesn't\n * have matching search results.\n *\n * @param param0\n * @returns\n */\nexport function EmptyTablePlaceholder({\n  className,\n  noResultsLabel\n}) {\n  const {\n    headers\n  } = useDatatableWrapper();\n  return React.createElement(\"tr\", {\n    className: makeClasses('tbody-tr', className)\n  }, React.createElement(\"td\", {\n    className: \"tbody-td\",\n    colSpan: headers.length\n  }, noResultsLabel || 'No results to be shown.'));\n}","map":{"version":3,"names":["React","Form","makeClasses","useDatatableWrapper","useControlledStateSetter","useCreateCheckboxHandlers","TableBody","labels","classes","rowProps","onRowClick","onRowClickProp","controlledProps","children","data","bodyContent","body","dataLength","length","rowIdx","push","createElement","TableRow","key","rowData","td","tr","EmptyTablePlaceholder","noResultsLabel","noResults","className","tbody","VALID_TAGS_FOR_ROW_ONCLICK","headers","onCheckboxChange","onCheckboxChangeContext","checkboxState","checkboxStateContext","filteredDataLength","filteredDataLengthContext","headersLength","event","target","HTMLElement","includes","tagName","createColumnCheckboxClickHandler","row","colIdx","cell","cellProps","prop","rawProp","checkbox","alignment","toString","value","idValue","idProp","isSelected","selected","has","Group","controlId","Label","Check","type","name","checked","onChange","checkboxProp","undefined","horizontal","style","passedRowProps","Object","assign","onClick","colSpan"],"sources":["/home/wendel/desen/regulus/node_modules/react-bs-datatable/lib/esm/components/TableBody.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\nimport { useControlledStateSetter, useCreateCheckboxHandlers } from '../helpers/hooks';\n/**\n * Renders the table body, which is a `tbody` tag along with the rest of the elements,\n * such as `tr` and `td` tags.\n */\nexport function TableBody({ labels, classes, rowProps, onRowClick: onRowClickProp, controlledProps, children }) {\n    const { data } = useDatatableWrapper();\n    useControlledStateSetter(controlledProps);\n    let bodyContent;\n    if (children) {\n        if (typeof children === 'function') {\n            bodyContent = children(data);\n        }\n        else {\n            bodyContent = children;\n        }\n    }\n    else {\n        const body = [];\n        const dataLength = data.length;\n        if (dataLength > 0) {\n            for (let rowIdx = 0; rowIdx < dataLength; rowIdx++) {\n                // Push to array.\n                body.push(React.createElement(TableRow, { key: rowIdx, rowData: data[rowIdx], rowIdx: rowIdx, rowProps: rowProps, classes: { td: classes === null || classes === void 0 ? void 0 : classes.td, tr: classes === null || classes === void 0 ? void 0 : classes.tr }, controlledProps: controlledProps, onRowClick: onRowClickProp }));\n            }\n        }\n        else {\n            body.push(React.createElement(EmptyTablePlaceholder, { key: \"row-zero-length\", noResultsLabel: labels === null || labels === void 0 ? void 0 : labels.noResults }));\n        }\n        bodyContent = body;\n    }\n    return (React.createElement(\"tbody\", { className: makeClasses('tbody', classes === null || classes === void 0 ? void 0 : classes.tbody) }, bodyContent));\n}\n// Composing functions.\nconst VALID_TAGS_FOR_ROW_ONCLICK = ['TD', 'TR'];\n/**\n * `TableRow` component, as its name suggests, is a component to render a row of a table.\n * This component is exported so it is possible to compose the rows further. For example:\n *\n * ```\n * <TableBody>\n *   {\n *     data.map((row, rowIdx) => (\n *       row.isLoading ? (\n *         <tr><td colSpan={headers.length}><Loading /></td></tr>\n *       ) : (\n *         <TableRow rowData={row} rowIdx={rowIdx} />\n *       )\n *     ))\n *   }\n * </TableBody>\n * ```\n *\n * The above snippet will render loading indicator for rows that don't have sufficient data to store yet.\n */\nexport function TableRow({ rowData, rowIdx, onRowClick: onRowClickProp, classes, controlledProps, rowProps }) {\n    const { headers, onCheckboxChange: onCheckboxChangeContext, checkboxState: checkboxStateContext, filteredDataLength: filteredDataLengthContext, data } = useDatatableWrapper();\n    const headersLength = headers.length;\n    function onRowClick(event) {\n        if (typeof onRowClickProp === 'function') {\n            if (event.target instanceof HTMLElement &&\n                VALID_TAGS_FOR_ROW_ONCLICK.includes(event.target.tagName)) {\n                onRowClickProp(rowData, event);\n            }\n        }\n    }\n    const onCheckboxChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onCheckboxChange) || onCheckboxChangeContext;\n    const checkboxState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.checkboxState) || checkboxStateContext;\n    const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n    const { createColumnCheckboxClickHandler } = useCreateCheckboxHandlers({\n        checkboxState,\n        data,\n        filteredDataLength,\n        onCheckboxChange\n    });\n    const row = [];\n    for (let colIdx = 0; colIdx < headersLength; colIdx++) {\n        const { cell, cellProps = {}, prop: rawProp, checkbox, alignment } = headers[colIdx];\n        const prop = rawProp.toString();\n        let value = '';\n        if (checkbox && checkboxState) {\n            // Render checkbox.\n            const idValue = rowData[checkbox.idProp];\n            const isSelected = checkboxState[prop].selected.has(idValue);\n            // Source for using visually hidden: https://www.w3.org/WAI/tutorials/forms/labels/#hiding-the-label-element.\n            value = (React.createElement(Form.Group, { controlId: `table-selection-${rowData[checkbox.idProp]}` },\n                React.createElement(Form.Label, { className: \"visually-hidden\" }, isSelected\n                    ? `Remove ${idValue} from selection`\n                    : `Add ${idValue} to selection`),\n                React.createElement(Form.Check, { type: \"checkbox\", name: \"table-selection\", value: rowData[checkbox.idProp], className: checkbox.className, checked: checkboxState[prop].selected.has(idValue), onChange: createColumnCheckboxClickHandler({\n                        checkboxProp: prop,\n                        idProp: checkbox.idProp,\n                        rowIdx\n                    }) })));\n        }\n        else {\n            // Render normally.\n            if (cell === undefined) {\n                value = rowData[prop];\n            }\n            else {\n                value = cell(rowData);\n            }\n        }\n        row.push(React.createElement(\"td\", { key: `col-${colIdx}`, className: makeClasses('tbody-td', classes === null || classes === void 0 ? void 0 : classes.td, \n            // Alignment.\n            {\n                'text-start': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'left',\n                'text-center': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'center',\n                'text-end': (alignment === null || alignment === void 0 ? void 0 : alignment.horizontal) === 'right'\n            }, typeof cellProps.className === 'function'\n                ? cellProps.className(rowData)\n                : cellProps.className), style: typeof cellProps.style === 'function'\n                ? cellProps.style(rowData)\n                : cellProps.style }, value));\n    }\n    let passedRowProps = {};\n    if (typeof rowProps === 'function') {\n        passedRowProps = rowProps(rowData);\n    }\n    else if (rowProps !== undefined) {\n        passedRowProps = rowProps;\n    }\n    return (React.createElement(\"tr\", Object.assign({}, passedRowProps, { className: makeClasses('tbody-tr', classes === null || classes === void 0 ? void 0 : classes.tr, passedRowProps === null || passedRowProps === void 0 ? void 0 : passedRowProps.className), onClick: onRowClick }), row));\n}\n/**\n * `EmptyTablePlaceholder` is a component used to indicate that a table is empty, or doesn't\n * have matching search results.\n *\n * @param param0\n * @returns\n */\nexport function EmptyTablePlaceholder({ className, noResultsLabel }) {\n    const { headers } = useDatatableWrapper();\n    return (React.createElement(\"tr\", { className: makeClasses('tbody-tr', className) },\n        React.createElement(\"td\", { className: \"tbody-td\", colSpan: headers.length }, noResultsLabel || 'No results to be shown.')));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}