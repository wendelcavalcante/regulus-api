{"ast":null,"code":"import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useControlledStateSetter } from '../helpers/hooks';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\n/**\n * Renders a control for the pagination options. It will show a form group, consisting of\n * a select input, as well as a label/text before and after the input. By default,\n * it renders \"Rows per page\" as a label, which refers to the select input. There is no\n * text after the select input, unless specified in the `labels.afterSelect` prop.\n *\n * The options available in the select input are the ones specified from the `DatatableWrapper`,\n * or the ones passed in this component's prop `controlledProps.rowsPerPageOptions`.\n *\n * When `alwaysShowPagination` is set to `false`, then this component will be visually hidden.\n */\nexport function PaginationOptions({\n  labels,\n  classes,\n  alwaysShowPagination = true,\n  controlledProps\n}) {\n  const {\n    onRowsPerPageChange: onRowsPerPageChangeContext,\n    rowsPerPageOptions: rowsPerPageOptionsContext,\n    rowsPerPageState: rowsPerPageStateContext,\n    filteredDataLength: filteredDataLengthContext\n  } = useDatatableWrapper();\n  useControlledStateSetter(controlledProps);\n  // Controlled has the bigger priority.\n  const rowsPerPageOptions = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPageOptions) || rowsPerPageOptionsContext;\n  const rowsPerPageState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPage) || rowsPerPageStateContext;\n  const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n  const onRowsPerPageChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onRowsPerPageChange) || onRowsPerPageChangeContext;\n  // Hide pagination if pagination is meant to not always be shown or\n  // if the filtered data length is less than the minimum rows per page option.\n  const hidePaginationOptions = !alwaysShowPagination && filteredDataLength <= Math.min(...rowsPerPageOptions);\n  return React.createElement(Form.Group, {\n    controlId: \"formGroupPagination\",\n    className: makeClasses('paginationOpts__root', classes === null || classes === void 0 ? void 0 : classes.formGroup, {\n      invisible: hidePaginationOptions\n    })\n  }, React.createElement(Form.Label, {\n    className: classes === null || classes === void 0 ? void 0 : classes.formText\n  }, (labels === null || labels === void 0 ? void 0 : labels.beforeSelect) || 'Rows per page'), React.createElement(Form.Select, {\n    name: \"table-pagination-options\",\n    value: rowsPerPageState,\n    as: \"select\",\n    placeholder: \"select\",\n    onChange: e => onRowsPerPageChange(Number(e.target.value)),\n    className: classes === null || classes === void 0 ? void 0 : classes.formControl\n  }, rowsPerPageOptions.map(option => {\n    const optionProps = {\n      key: `page-opt-${option}`,\n      value: option\n    };\n    return React.createElement(\"option\", Object.assign({}, optionProps), option);\n  })), (labels === null || labels === void 0 ? void 0 : labels.afterSelect) && React.createElement(Form.Text, {\n    className: classes === null || classes === void 0 ? void 0 : classes.formText\n  }, labels === null || labels === void 0 ? void 0 : labels.afterSelect));\n}","map":{"version":3,"names":["React","Form","useControlledStateSetter","makeClasses","useDatatableWrapper","PaginationOptions","labels","classes","alwaysShowPagination","controlledProps","onRowsPerPageChange","onRowsPerPageChangeContext","rowsPerPageOptions","rowsPerPageOptionsContext","rowsPerPageState","rowsPerPageStateContext","filteredDataLength","filteredDataLengthContext","rowsPerPage","hidePaginationOptions","Math","min","createElement","Group","controlId","className","formGroup","invisible","Label","formText","beforeSelect","Select","name","value","as","placeholder","onChange","e","Number","target","formControl","map","option","optionProps","key","Object","assign","afterSelect","Text"],"sources":["/home/wendel/desen/regulus/node_modules/react-bs-datatable/lib/esm/components/PaginationOptions.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useControlledStateSetter } from '../helpers/hooks';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\n/**\n * Renders a control for the pagination options. It will show a form group, consisting of\n * a select input, as well as a label/text before and after the input. By default,\n * it renders \"Rows per page\" as a label, which refers to the select input. There is no\n * text after the select input, unless specified in the `labels.afterSelect` prop.\n *\n * The options available in the select input are the ones specified from the `DatatableWrapper`,\n * or the ones passed in this component's prop `controlledProps.rowsPerPageOptions`.\n *\n * When `alwaysShowPagination` is set to `false`, then this component will be visually hidden.\n */\nexport function PaginationOptions({ labels, classes, alwaysShowPagination = true, controlledProps }) {\n    const { onRowsPerPageChange: onRowsPerPageChangeContext, rowsPerPageOptions: rowsPerPageOptionsContext, rowsPerPageState: rowsPerPageStateContext, filteredDataLength: filteredDataLengthContext } = useDatatableWrapper();\n    useControlledStateSetter(controlledProps);\n    // Controlled has the bigger priority.\n    const rowsPerPageOptions = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPageOptions) || rowsPerPageOptionsContext;\n    const rowsPerPageState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPage) || rowsPerPageStateContext;\n    const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n    const onRowsPerPageChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onRowsPerPageChange) || onRowsPerPageChangeContext;\n    // Hide pagination if pagination is meant to not always be shown or\n    // if the filtered data length is less than the minimum rows per page option.\n    const hidePaginationOptions = !alwaysShowPagination &&\n        filteredDataLength <= Math.min(...rowsPerPageOptions);\n    return (React.createElement(Form.Group, { controlId: \"formGroupPagination\", className: makeClasses('paginationOpts__root', classes === null || classes === void 0 ? void 0 : classes.formGroup, {\n            invisible: hidePaginationOptions\n        }) },\n        React.createElement(Form.Label, { className: classes === null || classes === void 0 ? void 0 : classes.formText }, (labels === null || labels === void 0 ? void 0 : labels.beforeSelect) || 'Rows per page'),\n        React.createElement(Form.Select, { name: \"table-pagination-options\", value: rowsPerPageState, as: \"select\", placeholder: \"select\", onChange: (e) => onRowsPerPageChange(Number(e.target.value)), className: classes === null || classes === void 0 ? void 0 : classes.formControl }, rowsPerPageOptions.map((option) => {\n            const optionProps = {\n                key: `page-opt-${option}`,\n                value: option\n            };\n            return React.createElement(\"option\", Object.assign({}, optionProps), option);\n        })),\n        (labels === null || labels === void 0 ? void 0 : labels.afterSelect) && (React.createElement(Form.Text, { className: classes === null || classes === void 0 ? void 0 : classes.formText }, labels === null || labels === void 0 ? void 0 : labels.afterSelect))));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}