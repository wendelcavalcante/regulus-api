{"ast":null,"code":"/**\n * @internal\n *\n * This is the sort function used in the uncontrolled table mode.\n */\nexport function sortData(data, sortedProp, sortValueObj) {\n  const sortedData = [...data];\n  const {\n    prop,\n    order\n  } = sortedProp;\n  const sortMultiplier = order === 'asc' ? 1 : -1;\n  const sortFn = sortValueObj === null || sortValueObj === void 0 ? void 0 : sortValueObj[prop];\n  sortedData.sort((a, b) => {\n    let quantifiedValue1 = a[prop];\n    let quantifiedValue2 = b[prop];\n    if (sortFn) {\n      quantifiedValue1 = sortFn(quantifiedValue1);\n      quantifiedValue2 = sortFn(quantifiedValue2);\n    }\n    if (quantifiedValue1 < quantifiedValue2) {\n      return -1 * sortMultiplier;\n    } else if (quantifiedValue1 > quantifiedValue2) {\n      return 1 * sortMultiplier;\n    }\n    return 0;\n  });\n  return sortedData;\n}\n/**\n * @internal\n *\n * This is the filter function used in the uncontrolled table mode.\n */\nexport function filterData(data, headers, filterText) {\n  if (filterText === '') {\n    return data;\n  }\n  const lowercased = filterText.toLowerCase();\n  return data.filter(element => {\n    let isElementIncluded = false;\n    for (const key in headers) {\n      const header = headers[key];\n      if (header.isFilterable) {\n        let columnValue = element[header.prop];\n        // Only process non-null values.\n        if (columnValue !== null && columnValue !== undefined) {\n          if (typeof columnValue !== 'string') {\n            // Convert to string if it is not a string.\n            columnValue = columnValue.toString();\n          }\n          columnValue = columnValue.toLowerCase();\n          isElementIncluded = columnValue.includes(lowercased);\n          if (isElementIncluded) {\n            break;\n          }\n        }\n      }\n    }\n    return isElementIncluded;\n  });\n}\n/**\n * @internal\n *\n * This is the paginate function used in the uncontrolled table mode.\n */\nexport function paginateData(data, currentPage, rowsPerPage) {\n  let paginatedData = [...data];\n  if (rowsPerPage !== undefined) {\n    const startRow = (currentPage - 1) * rowsPerPage;\n    const endRow = currentPage * rowsPerPage;\n    paginatedData = data.slice(startRow, endRow);\n  }\n  return paginatedData;\n}\n/**\n * @internal\n *\n * This is a helper function to get the next sort state.\n */\nexport function getNextSortState(oldSort, sortedProp) {\n  const nextSort = {\n    order: 'asc',\n    prop: sortedProp\n  };\n  if (sortedProp === oldSort.prop) {\n    nextSort.order = oldSort.order === 'asc' ? 'desc' : 'asc';\n  }\n  return nextSort;\n}","map":{"version":3,"names":["sortData","data","sortedProp","sortValueObj","sortedData","prop","order","sortMultiplier","sortFn","sort","a","b","quantifiedValue1","quantifiedValue2","filterData","headers","filterText","lowercased","toLowerCase","filter","element","isElementIncluded","key","header","isFilterable","columnValue","undefined","toString","includes","paginateData","currentPage","rowsPerPage","paginatedData","startRow","endRow","slice","getNextSortState","oldSort","nextSort"],"sources":["/home/wendel/desen/regulus/node_modules/react-bs-datatable/lib/esm/helpers/data.js"],"sourcesContent":["/**\n * @internal\n *\n * This is the sort function used in the uncontrolled table mode.\n */\nexport function sortData(data, sortedProp, sortValueObj) {\n    const sortedData = [...data];\n    const { prop, order } = sortedProp;\n    const sortMultiplier = order === 'asc' ? 1 : -1;\n    const sortFn = sortValueObj === null || sortValueObj === void 0 ? void 0 : sortValueObj[prop];\n    sortedData.sort((a, b) => {\n        let quantifiedValue1 = a[prop];\n        let quantifiedValue2 = b[prop];\n        if (sortFn) {\n            quantifiedValue1 = sortFn(quantifiedValue1);\n            quantifiedValue2 = sortFn(quantifiedValue2);\n        }\n        if (quantifiedValue1 < quantifiedValue2) {\n            return -1 * sortMultiplier;\n        }\n        else if (quantifiedValue1 > quantifiedValue2) {\n            return 1 * sortMultiplier;\n        }\n        return 0;\n    });\n    return sortedData;\n}\n/**\n * @internal\n *\n * This is the filter function used in the uncontrolled table mode.\n */\nexport function filterData(data, headers, filterText) {\n    if (filterText === '') {\n        return data;\n    }\n    const lowercased = filterText.toLowerCase();\n    return data.filter((element) => {\n        let isElementIncluded = false;\n        for (const key in headers) {\n            const header = headers[key];\n            if (header.isFilterable) {\n                let columnValue = element[header.prop];\n                // Only process non-null values.\n                if (columnValue !== null && columnValue !== undefined) {\n                    if (typeof columnValue !== 'string') {\n                        // Convert to string if it is not a string.\n                        columnValue = columnValue.toString();\n                    }\n                    columnValue = columnValue.toLowerCase();\n                    isElementIncluded = columnValue.includes(lowercased);\n                    if (isElementIncluded) {\n                        break;\n                    }\n                }\n            }\n        }\n        return isElementIncluded;\n    });\n}\n/**\n * @internal\n *\n * This is the paginate function used in the uncontrolled table mode.\n */\nexport function paginateData(data, currentPage, rowsPerPage) {\n    let paginatedData = [...data];\n    if (rowsPerPage !== undefined) {\n        const startRow = (currentPage - 1) * rowsPerPage;\n        const endRow = currentPage * rowsPerPage;\n        paginatedData = data.slice(startRow, endRow);\n    }\n    return paginatedData;\n}\n/**\n * @internal\n *\n * This is a helper function to get the next sort state.\n */\nexport function getNextSortState(oldSort, sortedProp) {\n    const nextSort = { order: 'asc', prop: sortedProp };\n    if (sortedProp === oldSort.prop) {\n        nextSort.order = oldSort.order === 'asc' ? 'desc' : 'asc';\n    }\n    return nextSort;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}