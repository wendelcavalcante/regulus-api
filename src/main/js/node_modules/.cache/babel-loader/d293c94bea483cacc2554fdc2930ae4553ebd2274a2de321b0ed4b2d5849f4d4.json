{"ast":null,"code":"import React from 'react';\nimport { InputGroup, Form, Button } from 'react-bootstrap';\nimport { useControlledStateSetter } from '../helpers/hooks';\nimport { useDatatableWrapper } from './DatatableWrapper';\nimport FontAwesome from './FontAwesome';\n/**\n * Renders a control for the text filtering. This component is\n * only rendered when at least one of the headers have `isFilterable`\n * prop. Otherwise, this component will return `null`.\n */\nexport function Filter({\n  placeholder = 'Enter text...',\n  classes,\n  controlledProps\n}) {\n  const {\n    filterState: filterStateContext,\n    onFilterChange: onFilterChangeContext,\n    isFilterable\n  } = useDatatableWrapper();\n  useControlledStateSetter(controlledProps);\n  if (!isFilterable) {\n    return null;\n  }\n  /**\n   * Controlled has the bigger priority.\n   * Supports @deprecated onFilter\n   */\n  const onFilterChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilterChange) || (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilter) || onFilterChangeContext;\n  const filterState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filter) || filterStateContext;\n  return React.createElement(InputGroup, {\n    className: classes === null || classes === void 0 ? void 0 : classes.inputGroup\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"table-filter\",\n    value: filterState,\n    placeholder: placeholder,\n    onChange: e => onFilterChange(e.target.value),\n    className: classes === null || classes === void 0 ? void 0 : classes.input\n  }), React.createElement(Button, {\n    onClick: () => onFilterChange(''),\n    className: classes === null || classes === void 0 ? void 0 : classes.clearButton,\n    \"aria-label\": \"Clear filter\"\n  }, React.createElement(FontAwesome, {\n    icon: \"times\",\n    className: \"fa-fw\"\n  })));\n}","map":{"version":3,"names":["React","InputGroup","Form","Button","useControlledStateSetter","useDatatableWrapper","FontAwesome","Filter","placeholder","classes","controlledProps","filterState","filterStateContext","onFilterChange","onFilterChangeContext","isFilterable","onFilter","filter","createElement","className","inputGroup","Control","type","name","value","onChange","e","target","input","onClick","clearButton","icon"],"sources":["/home/wendel/desen/regulus/node_modules/react-bs-datatable/lib/esm/components/Filter.js"],"sourcesContent":["import React from 'react';\nimport { InputGroup, Form, Button } from 'react-bootstrap';\nimport { useControlledStateSetter } from '../helpers/hooks';\nimport { useDatatableWrapper } from './DatatableWrapper';\nimport FontAwesome from './FontAwesome';\n/**\n * Renders a control for the text filtering. This component is\n * only rendered when at least one of the headers have `isFilterable`\n * prop. Otherwise, this component will return `null`.\n */\nexport function Filter({ placeholder = 'Enter text...', classes, controlledProps }) {\n    const { filterState: filterStateContext, onFilterChange: onFilterChangeContext, isFilterable } = useDatatableWrapper();\n    useControlledStateSetter(controlledProps);\n    if (!isFilterable) {\n        return null;\n    }\n    /**\n     * Controlled has the bigger priority.\n     * Supports @deprecated onFilter\n     */\n    const onFilterChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilterChange) ||\n        (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onFilter) ||\n        onFilterChangeContext;\n    const filterState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filter) || filterStateContext;\n    return (React.createElement(InputGroup, { className: classes === null || classes === void 0 ? void 0 : classes.inputGroup },\n        React.createElement(Form.Control, { type: \"text\", name: \"table-filter\", value: filterState, placeholder: placeholder, onChange: (e) => onFilterChange(e.target.value), className: classes === null || classes === void 0 ? void 0 : classes.input }),\n        React.createElement(Button, { onClick: () => onFilterChange(''), className: classes === null || classes === void 0 ? void 0 : classes.clearButton, \"aria-label\": \"Clear filter\" },\n            React.createElement(FontAwesome, { icon: \"times\", className: \"fa-fw\" }))));\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC1D,SAASC,wBAAwB,QAAQ,kBAAkB;AAC3D,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAAC;EAAEC,WAAW,GAAG,eAAe;EAAEC,OAAO;EAAEC;AAAgB,CAAC,EAAE;EAChF,MAAM;IAAEC,WAAW,EAAEC,kBAAkB;IAAEC,cAAc,EAAEC,qBAAqB;IAAEC;EAAa,CAAC,GAAGV,mBAAmB,CAAC,CAAC;EACtHD,wBAAwB,CAACM,eAAe,CAAC;EACzC,IAAI,CAACK,YAAY,EAAE;IACf,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI,MAAMF,cAAc,GAAG,CAACH,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACG,cAAc,MACnHH,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACM,QAAQ,CAAC,IAC5FF,qBAAqB;EACzB,MAAMH,WAAW,GAAG,CAACD,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACO,MAAM,KAAKL,kBAAkB;EACpI,OAAQZ,KAAK,CAACkB,aAAa,CAACjB,UAAU,EAAE;IAAEkB,SAAS,EAAEV,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACW;EAAW,CAAC,EACvHpB,KAAK,CAACkB,aAAa,CAAChB,IAAI,CAACmB,OAAO,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE,cAAc;IAAEC,KAAK,EAAEb,WAAW;IAAEH,WAAW,EAAEA,WAAW;IAAEiB,QAAQ,EAAGC,CAAC,IAAKb,cAAc,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAEL,SAAS,EAAEV,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACmB;EAAM,CAAC,CAAC,EACpP5B,KAAK,CAACkB,aAAa,CAACf,MAAM,EAAE;IAAE0B,OAAO,EAAEA,CAAA,KAAMhB,cAAc,CAAC,EAAE,CAAC;IAAEM,SAAS,EAAEV,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACqB,WAAW;IAAE,YAAY,EAAE;EAAe,CAAC,EAC7K9B,KAAK,CAACkB,aAAa,CAACZ,WAAW,EAAE;IAAEyB,IAAI,EAAE,OAAO;IAAEZ,SAAS,EAAE;EAAQ,CAAC,CAAC,CAAC,CAAC;AACrF"},"metadata":{},"sourceType":"module","externalDependencies":[]}