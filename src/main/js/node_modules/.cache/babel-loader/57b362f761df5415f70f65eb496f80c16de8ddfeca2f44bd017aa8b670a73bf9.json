{"ast":null,"code":"import * as React from 'react';\nimport { KeyFilter } from 'primereact/keyfilter';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, mergeProps, DomHandler } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar InputTextBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'InputText',\n    keyfilter: null,\n    validateOnly: false,\n    tooltip: null,\n    tooltipOptions: null,\n    onBeforeInput: null,\n    onInput: null,\n    onKeyDown: null,\n    onPaste: null,\n    children: undefined\n  }\n});\nvar InputText = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = InputTextBase.getProps(inProps, context);\n  var _InputTextBase$setMet = InputTextBase.setMetaData({\n      props: props\n    }),\n    ptm = _InputTextBase$setMet.ptm;\n  var elementRef = React.useRef(ref);\n  var onKeyDown = function onKeyDown(event) {\n    props.onKeyDown && props.onKeyDown(event);\n    if (props.keyfilter) {\n      KeyFilter.onKeyPress(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onBeforeInput = function onBeforeInput(event) {\n    props.onBeforeInput && props.onBeforeInput(event);\n    if (props.keyfilter) {\n      KeyFilter.onBeforeInput(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onInput = function onInput(event) {\n    var target = event.target;\n    var validatePattern = true;\n    if (props.keyfilter && props.validateOnly) {\n      validatePattern = KeyFilter.validate(event, props.keyfilter);\n    }\n    props.onInput && props.onInput(event, validatePattern);\n\n    // for uncontrolled changes\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n  var onPaste = function onPaste(event) {\n    props.onPaste && props.onPaste(event);\n    if (props.keyfilter) {\n      KeyFilter.onPaste(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue);\n  }, [props.value, props.defaultValue]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var className = classNames('p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled\n  }, props.className);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: className,\n    onBeforeInput: onBeforeInput,\n    onInput: onInput,\n    onKeyDown: onKeyDown,\n    onPaste: onPaste\n  }, InputTextBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", rootProps), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions, {\n    pt: ptm('tooltip')\n  })));\n}));\nInputText.displayName = 'InputText';\nexport { InputText };","map":{"version":3,"names":["React","KeyFilter","Tooltip","ObjectUtils","classNames","mergeProps","DomHandler","ComponentBase","PrimeReactContext","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","InputTextBase","extend","defaultProps","__TYPE","keyfilter","validateOnly","tooltip","tooltipOptions","onBeforeInput","onInput","onKeyDown","onPaste","children","undefined","InputText","memo","forwardRef","inProps","ref","context","useContext","props","getProps","_InputTextBase$setMet","setMetaData","ptm","elementRef","useRef","event","onKeyPress","validatePattern","validate","isNotEmpty","value","addClass","removeClass","useEffect","combinedRefs","isFilled","useMemo","defaultValue","hasTooltip","className","disabled","rootProps","getOtherProps","createElement","Fragment","content","pt","displayName"],"sources":["/home/wendel/desen/regulus/node_modules/primereact/inputtext/inputtext.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { KeyFilter } from 'primereact/keyfilter';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, mergeProps, DomHandler } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar InputTextBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'InputText',\n    keyfilter: null,\n    validateOnly: false,\n    tooltip: null,\n    tooltipOptions: null,\n    onBeforeInput: null,\n    onInput: null,\n    onKeyDown: null,\n    onPaste: null,\n    children: undefined\n  }\n});\n\nvar InputText = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = InputTextBase.getProps(inProps, context);\n  var _InputTextBase$setMet = InputTextBase.setMetaData({\n      props: props\n    }),\n    ptm = _InputTextBase$setMet.ptm;\n  var elementRef = React.useRef(ref);\n  var onKeyDown = function onKeyDown(event) {\n    props.onKeyDown && props.onKeyDown(event);\n    if (props.keyfilter) {\n      KeyFilter.onKeyPress(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onBeforeInput = function onBeforeInput(event) {\n    props.onBeforeInput && props.onBeforeInput(event);\n    if (props.keyfilter) {\n      KeyFilter.onBeforeInput(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onInput = function onInput(event) {\n    var target = event.target;\n    var validatePattern = true;\n    if (props.keyfilter && props.validateOnly) {\n      validatePattern = KeyFilter.validate(event, props.keyfilter);\n    }\n    props.onInput && props.onInput(event, validatePattern);\n\n    // for uncontrolled changes\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n  var onPaste = function onPaste(event) {\n    props.onPaste && props.onPaste(event);\n    if (props.keyfilter) {\n      KeyFilter.onPaste(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue);\n  }, [props.value, props.defaultValue]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var className = classNames('p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled\n  }, props.className);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: className,\n    onBeforeInput: onBeforeInput,\n    onInput: onInput,\n    onKeyDown: onKeyDown,\n    onPaste: onPaste\n  }, InputTextBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", rootProps), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions, {\n    pt: ptm('tooltip')\n  })));\n}));\nInputText.displayName = 'InputText';\n\nexport { InputText };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}